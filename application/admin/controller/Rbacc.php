<?php
namespace app\admin\controller;
use app\admin\model\rbac\Organize;
use app\common\controller\Backend;
use app\admin\logical\Rbacl;
use app\admin\model\rbac\User;
use app\admin\model\rbac\Role;
use think\exception\ErrorException;

class Rbacc extends Backend
{
    //Rbacl类的实例
   private static $rbaclInstance='';
   //用户实例
   private static $userInstance='';
   //角色实例
   private static $roleInstance='';
   //组实例
   private static $groupInstance='';
   //组织实例
   private static $organizeInstance='';
   //model路径
    private static $modelpath='app\admin\model\rbac\\';
   //过滤函数
    private static $filterArray=['strip_tags','htmlspecialchars'];
   public function _initialize()
   {
       return parent::_initialize(); // TODO: Change the autogenerated stub
   }
   /*
    @管理员列表入口方法
    @ return view;
   */
   public function index(){
        return $this->view->fetch('index');
   }
    /**
     * 获取指定实例
     * @param $objstr
     * @return mixed
     */
   public function getModel($objstr=''){
       if(empty($objstr))
           return false;
       $obj=strtolower($objstr).'Instance';
        if(empty(self::$obj)){
            $tmpObj = new \ReflectionClass(self::$modelpath.ucfirst($objstr));
            self::$$obj=new $tmpObj->name();
        }
        return self::$$obj;
   }

    /**
     * 获取权限逻辑处理类实例
     * @return Rbacl|string
     */
   public function getRbacl(){
       if(! (self::$rbaclInstance instanceof Rbacl)){
           self::$rbaclInstance = new Rbacl();
       }
       return self::$rbaclInstance;
   }

    /**
     * 获取组织实例
     * @return $organizeInstance|string
     */
    public static function getOrganize(){
        if(! (self::$organizeInstance) instanceof Organize){
            self::$organizeInstance=new Organize();
        }
        return self::$organizeInstance;
    }
    /**
     * 用户列表
     */
    public function listUser()
    {
        //搜索条件参数
        $condition['where'] = empty($this->request->request('keys/a','',self::$filterArray))?array():$this->request->request('keys/a','',self::$filterArray);
        //获取用户信息
        $result=self::getModel('User')->listUser($condition,$this->request->request("limit", '',self::$filterArray),$this->request->request("page", '',self::$filterArray));
        //处理用户信息
        self::getRbacl()->showUser($result);
    }
    /**
     * 保存用户
     *      1.添加用户
     *      2.修改用户
     * 注意： 判断依据，提交过来的type决定，type=='add'----添加用户  ；  type=='edit'-----修改用户
     */
    public function addUser($ids=NULL){
          $params = $this->request->post();
          if ($this->request->isPost()){
            var_dump($params);
            die();


          }
          return $this->view->fetch();
            //  Rbacc::getRbacl()->addUser();
    }
    public function editUser(){
    }
    /**
     * @角色部分代码
     ***********
     */
    public function listRole(){
        if ($this->request->isPost()){
            //搜索条件参数
            $condition['where'] = empty($this->request->request('keys/a'))?array():$this->request->request('keys/a');
            //获取用户信息
            $result=self::getModel('Role')->listRole($condition,$this->request->request("limit", ''),$this->request->request("page", ''));
            //处理用户信息
            self::getRbacl()->showRole($result);
        }
        return $this->view->fetch();
    }
    /*************
      @添加角色接口
    *************/
    public function addRole(){
          $params = $this->request->post();
          if ($this->request->isPost()){
              $this->saveRole($params);
          }
          return $this->view->fetch();
    }
    /*****
      @ 编辑角色接口
    *****************/
    public function editRole($ids=NULL){
          $condition['where']=array('r_id'=>$ids);
          $rows=self::getModel('Role')->listRole($condition);
          if(!$rows){
              outputJson('-2','No Results were found');
          }
          $this->view->assign("row", $rows['data'][0]);
          if($this->request->isAjax()){
              $params = $this->request->post();
              $this->saveRole($params);
          }
          return $this->view->fetch();
    }
    /**
     * 保存角色
     *      1.添加角色
     *      2.修改角色
     * 注意： 判断依据，提交过来的type决定，type=='add'----添加角色  ；  type=='edit'-----修改角色
     */
    private function saveRole($data){
        //获取role的相关信息，
        $roleInfo=self::getRbacl()->RoleHandle($data);
        //存储角色信息
        $result=self::getModel('Role')->saveRole($roleInfo);
        if(empty($result))
            outputJson('-2','保存失败');
        putlog('角色保存成功');
        outputJson('1','保存成功');
    }
    /**
     * @组织列表   *****部门组织列表部分代码
     */
    public function listOrganize(){
        if ($this->request->isPost()){
        //搜索条件参数
        $condition['where'] = empty($this->request->request('keys/a'))?array():$this->request->request('keys/a');
        //分页信息
        $limit=$this->request->request("limit", '10');
        $page=$this->request->request("page", '1');

        //获取用户信息
        $result=self::getModel('Organize')->listOrganize($condition,$limit,$page);
        //处理用户信息
        self::getRbacl()->showOrganize($result);
        }
        return $this->view->fetch();
    }
    /**
     * 保存组织
     *      1.添加组织
     *      2.修改组织
     * 注意： 判断依据，提交过来的type决定，type=='add'----添加组织  ；  type=='edit'-----修改组织
     */
    public function saveOrganize(){
        //获取role的相关信息，
        $organizeInfo=self::getRbacl()->organizeHandle();
        //存储角色信息
        $result=self::getModel('Organize')->saveOrganize($organizeInfo);
        if(empty($result))
            outputJson('-2','保存失败');
        putlog('角色保存成功');
        outputJson('1','保存成功');
    }
    /**
     * @组列表*********************************
     @权限分组 部分代码
     */
    public function listGroup(){
        //搜索条件参数
        $condition['where'] = empty($this->request->request('keys/a'))?array():$this->request->request('keys/a');
        //分页信息
        $limit=$this->request->request("limit", '10');
        $page=$this->request->request("page", '1');

        //获取用户信息
        $result=self::getModel('Group')->listGroup($condition,$limit,$page);
        //处理用户信息
        self::getRbacl()->showGroup($result);
    }
    /**
     * 保存组
     */
    public function saveGroup(){
        //获取role的相关信息，
        $organizeInfo=self::getRbacl()->groupHandle();
        //存储角色信息
        $result=self::getModel('Group')->saveGroup($organizeInfo);
        if(empty($result))
            outputJson('-2','保存失败');
        putlog('组保存成功');
        outputJson('1','保存成功');
    }
}
